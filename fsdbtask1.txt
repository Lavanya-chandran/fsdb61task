HTTP1.1:
The HyperText Transfer Protocol (HTTP) is a data communications protocol and acts as the foundation of the World Wide Web. 
After the original version was released and the functionality was subsequently extended,its popularity and usage grew but there were different implementations and there was a lack of standardization. 
In 1997, when HTTP/1.1 was published,several enhancements were introduced. 
This brought new features,as well as clarification for ambiguities in the protocol.
The HTTP/1.1 standard was published only a few months after HTTP/1.0,yet a version change was necessary because many applications pronounced themselves “HTTP/1.0”, but they were not fully implemented. 
Therefore,the specification of a more recent version of the protocol was necessary for clients and servers to properly understand each other’s capabilities.

HTTP/2:
Over the years, web pages became more complex. Some of them were even applications in their own right. 
More visual media was displayed and the volume and size of scripts adding interactivity also increased.
Much more data was transmitted over significantly more HTTP requests and this created more complexity and overhead for HTTP/1.1 connections. 
To account for this, Google implemented an experimental protocol SPDY in the early 2010s. 
This alternative way of exchanging data between client and server amassed interest from developers working on both browsers and servers. 
SPDY defined an increase in responsiveness and solved the problem of duplicate data transmission, serving as the foundation for the HTTP/2 protocol.


The first usable version of HTTP was created in 1997.
Because it went through several stages of development, this first version of HTTP was called HTTP/1.1. This version is still use on the web.
In 2015,a new version of HTTP called HTTP/2 was created.
HTTP/2 solves several problems that creators of HTTP/1.1 did not anticipate.
HTTP/2 is much faster and more efficient than HTTP/1.1.
HTTP/2 is faster in how it prioritizes content during loading Process.
HTTP/1.1 loads resources one after the other,so if one resource cannot be loaded, it blocks all the other resources behind it. 
HTTP/2 is able to use a single TCP connection to send multiple streams of data at once so that no one resource blocks any other resource.
In HTTP/1.1 each request had to wait for a response before the next request Could be sent.
HTTP/2 uses multiplexing to allow multiple concurrent requests and responses over a single TCP Connection.
HTTP/1.1 relies on the transport layer to avoid buffer overflow,so each new TCP connection requires a separate flow control mechanism. 
HTTP/2 multiplexes streams within a single TCP connection.
The major feature differentiates HTTP/2 from HTTP/1.1 is the binary framing layer. 
Unlike HTTP/1.1, HTTP/2 uses a binary framing layer.
This layer encapsulates messages converted to its binary equivalent while making sure that its HTTP semantics(method, details, header Information, etc) remain Untamed.